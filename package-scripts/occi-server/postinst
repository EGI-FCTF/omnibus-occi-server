#!/bin/bash
#
# Perform necessary occi-server setup steps
# after package is installed.
#

PROGNAME=`basename $0`
INSTALLER_DIR=`dirname $0`
DEST_DIR=/opt/occi-server
LINK_CONFIG_DIR=/etc/occi-server
LINK_DEST_DIR=/opt/rOCCI-server

if [ -f "/etc/redhat-release" ]; then
  APACHE_EXAMPLE_VH_DIR=/etc/httpd/conf.d
  APACHE_EXAMPLE_VH_FILE=$APACHE_EXAMPLE_VH_DIR/occi-ssl.conf
  APACHE_ENVVARS_FILE=/etc/sysconfig/httpd
else
  APACHE_EXAMPLE_VH_DIR=/etc/apache2/sites-available
  APACHE_EXAMPLE_VH_FILE=$APACHE_EXAMPLE_VH_DIR/occi-ssl
  APACHE_ENVVARS_FILE=/etc/apache2/envvars
fi

LINK_LOG_DIR=/var/log/occi-server
RUNTIME_DIR=$DEST_DIR/runtime
USAGE="usage: $0"

error_exit()
{
  echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

# chown
chown -R root:root $DEST_DIR || error_exit "Could not chown $DEST_DIR to root:root"

# create link
if [ -L "$LINK_DEST_DIR" ]; then
  rm $LINK_DEST_DIR || error_exit "Could not unlink $LINK_DEST_DIR"
fi
ln -sf $DEST_DIR/embedded/app/rOCCI-server $LINK_DEST_DIR || error_exit "Cloud not create a link from $LINK_DEST_DIR"

# prepare dir structure for logging
if [ -d "$LINK_LOG_DIR" ] && [ ! -L "$LINK_LOG_DIR" ]; then
  cp -p $LINK_LOG_DIR/*.log $DEST_DIR/embedded/app/rOCCI-server/log || error_exit "Could not copy backed up logs to the new directory"
  rm -rf $LINK_LOG_DIR || error_exit "Could not remove $LINK_LOG_DIR"
fi
if [ -L "$LINK_LOG_DIR" ]; then
 rm $LINK_LOG_DIR || error_exit "Could not unlink $LINK_LOG_DIR"
fi
ln -sf $DEST_DIR/embedded/app/rOCCI-server/log $LINK_LOG_DIR || error_exit "Could not create a link from $LINK_LOG_DIR"

# create the rocci user
id -u rocci 2>/dev/null
if [ "$?" -ne "0" ]; then
  useradd --system --shell /bin/false rocci || error_exit "Could not create the rocci user account"
  usermod -L rocci || error_exit "Could not lock the rocci user account"
fi

# chown log dir
chown -R rocci:rocci $LINK_LOG_DIR || error_exit "Could not chown $LINK_LOG_DIR to rocci:rocci"
chown -R rocci:rocci $DEST_DIR/embedded/app/rOCCI-server/log || error_exit "Could not chown log directory to rocci:rocci"

# prepare runtime dir
mkdir -p $RUNTIME_DIR || error_exit "Cloud not create $RUNTIME_DIR"
chown -R rocci:rocci $RUNTIME_DIR || error_exit "Could not chown $RUNTIME_DIR to rocci:rocci"

# link config files
if [ -L "$LINK_CONFIG_DIR" ]; then
  rm $LINK_CONFIG_DIR || error_exit "Could not unlink $LINK_CONFIG_DIR"
fi
ln -sf $DEST_DIR/embedded/app/rOCCI-server/etc $LINK_CONFIG_DIR || error_exit "Could not create a link from $LINK_CONFIG_DIR"

# add Apache2 VM examples
mkdir -p $APACHE_EXAMPLE_VH_DIR || error_exit "Could not create $APACHE_EXAMPLE_VH_DIR"
if [ -f "$APACHE_EXAMPLE_VH_FILE" ]; then
  APACHE_EXAMPLE_VH_FILE=$APACHE_EXAMPLE_VH_FILE.new
fi
cp $DEST_DIR/embedded/app/rOCCI-server/examples/etc/apache2/sites-available/occi-ssl $APACHE_EXAMPLE_VH_FILE || error_exit "Could not create $APACHE_EXAMPLE_VH_FILE"

# adapt A2 VH example to the current system
# set real hostname
sed -i "s/localhost/$(hostname -f)/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"
sed -i "s/$(hostname -f):11211/localhost:11211/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"
sed -i "s/$(hostname -f):2633/localhost:2633/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"

# modify paths to etc, log and tmp
sed -i "s/rocci-server/occi-server/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"
sed -i "s/rocci_server/occi_server/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"

# modify doc root & default ruby
DEST_DIR_ESCAPED=$(echo "$DEST_DIR" | sed -e 's/[\/&]/\\&/g')
sed -i "s/\/opt\/rOCCI-server\/public/$DEST_DIR_ESCAPED\/embedded\/app\/rOCCI-server\/public/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"
sed -i "s/#PassengerRuby \/path\/to\/your\/bin\/ruby/PassengerRuby $DEST_DIR_ESCAPED\/embedded\/bin\/ruby/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"

# point apache2 to our runtime dir
grep $APACHE_ENVVARS_FILE -e 'PASSENGER_NATIVE_SUPPORT_OUTPUT_DIR' &>/dev/null
if [ "$?" -ne "0" ]; then
  echo "export PASSENGER_NATIVE_SUPPORT_OUTPUT_DIR=$RUNTIME_DIR" >> $APACHE_ENVVARS_FILE
else
  printf "%s\n" "PASSENGER_NATIVE_SUPPORT_OUTPUT_DIR is already configured!"
fi

echo "Thank you for installing occi-server!"

exit 0
