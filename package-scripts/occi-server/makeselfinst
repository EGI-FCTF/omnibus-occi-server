#!/bin/bash
#
# Install the occi-server
#

PROGNAME=`basename $0`
INSTALLER_DIR=`dirname $0`
DEST_DIR=/opt/occi-server
CONFIG_DIR=/etc/occi-server
ALT_CONFIG_DIR=/etc/occi-server.new
LINK_DEST_DIR=/opt/rOCCI-server

if [ -f "/etc/redhat-release" ]; then
  APACHE_EXAMPLE_VH_DIR=/etc/httpd/conf.d
  APACHE_EXAMPLE_VH_FILE=$APACHE_EXAMPLE_VH_DIR/occi-ssl.conf
else
  APACHE_EXAMPLE_VH_DIR=/etc/apache2/sites-available
  APACHE_EXAMPLE_VH_FILE=$APACHE_EXAMPLE_VH_DIR/occi-ssl
fi

LOG_DIR=/var/log/occi-server
USAGE="usage: $0"

error_exit()
{
  echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

# move the actual files into place
rm -rf $DEST_DIR/* || error_exit "Could not remove contents of $DEST_DIR"
mkdir -p $DEST_DIR || error_exit "Could not create $DEST_DIR"
cp -R $INSTALLER_DIR $DEST_DIR || error_exit "Could not install to $DEST_DIR"
rm -f $DEST_DIR/$PROGNAME

# chown
chown -R root:root $DEST_DIR || error_exit "Could not chown $DEST_DIR to root:root"

# create link
ln -sf $DEST_DIR/embedded/app/rOCCI-server $LINK_DEST_DIR || error_exit "Cloud not create a link to $LINK_DEST_DIR"

# prepare dir structure for logging
mkdir -p $LOG_DIR || error_exit "Could not create $LOG_DIR"

# create the rocci user
id -u rocci 2>/dev/null
if [ "$?" -ne "0" ]; then
  useradd --system --shell /bin/false rocci || error_exit "Could not create the rocci user account"
  usermod -L rocci || error_exit "Could not lock the rocci user account"
fi

# chown log dir
chown -R rocci:rocci $LOG_DIR || error_exit "Could not chown $LOG_DIR to rocci:rocci"

# copy config files
if [ -d "$CONFIG_DIR" ]; then
  printf "Copying configuration files into $ALT_CONFIG_DIR!"
  CONFIG_DIR=$ALT_CONFIG_DIR
fi
mkdir -p $CONFIG_DIR || error_exit "Could not create $CONFIG_DIR"
cp -Rp $DEST_DIR/embedded/app/rOCCI-server/etc/* $CONFIG_DIR || error_exit "Could not copy configuration files to $CONFIG_DIR"

# create links to global config files and logs
rm -rf $DEST_DIR/embedded/app/rOCCI-server/etc || error_exit "Could not clean up configuration in $DEST_DIR"
ln -sf $CONFIG_DIR $DEST_DIR/embedded/app/rOCCI-server/etc || error_exit "Could not create a link to $CONFIG_DIR"

rm -rf $DEST_DIR/embedded/app/rOCCI-server/log || error_exit "Could not clean up logs in $DEST_DIR"
ln -sf $LOG_DIR $DEST_DIR/embedded/app/rOCCI-server/log || error_exit "Could not create a link to $LOG_DIR"

# add Apache2 VM examples
mkdir -p $APACHE_EXAMPLE_VH_DIR || error_exit "Could not create $APACHE_EXAMPLE_VH_DIR"
if [ -f "$APACHE_EXAMPLE_VH_FILE" ]; then
  APACHE_EXAMPLE_VH_FILE=$APACHE_EXAMPLE_VH_FILE.new
fi
cp $DEST_DIR/embedded/app/rOCCI-server/examples/etc/apache2/sites-available/occi-ssl $APACHE_EXAMPLE_VH_FILE || error_exit "Could not create $APACHE_EXAMPLE_VH_FILE"

# adapt A2 VH example to the current system
# set real hostname
sed -i "s/localhost/$(hostname -f)/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"
sed -i "s/$(hostname -f):11211/localhost:11211/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"
sed -i "s/$(hostname -f):2633/localhost:2633/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"

# modify paths to etc, log and tmp
sed -i "s/rocci-server/occi-server/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"
sed -i "s/rocci_server/occi_server/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"

# modify doc root & default ruby
DEST_DIR_ESCAPED=$(echo "$DEST_DIR" | sed -e 's/[\/&]/\\&/g')
sed -i "s/\/opt\/rOCCI-server\/public/$DEST_DIR_ESCAPED\/embedded\/app\/rOCCI-server\/public/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"
sed -i "s/#PassengerRuby \/path\/to\/your\/bin\/ruby/PassengerRuby $DEST_DIR_ESCAPED\/embedded\/bin\/ruby/g" $APACHE_EXAMPLE_VH_FILE || error_exit "Could not adapt $APACHE_EXAMPLE_VH_FILE to local configuration"

echo "Thank you for installing occi-server!"

exit 0
